---
# yamllint disable rule:line-length
# This approach relies on https://github.com/linux-system-roles/certificate/pull/97 and cockpit â‰¥ 211,
# so it does not work on RHEL/CentOS 7. tests_certificate_runafter.yml covers an approach which
# works everywhere, but has to use a `runafter` script.
- name: Install cockpit
  hosts: all
  vars:
    cockpit_packages: minimal
  roles:
    - linux-system-roles.cockpit

- name: Generate self-signed certmonger certificate
  hosts: all
  tasks:
    - name: Tests
      block:
        - name: Collect installed package versions
          package_facts:

        - name: Check if cockpit is new enough (at least 211) to support certmonger
          when: ansible_facts.packages['cockpit-ws'][0].version | int >= 211
          block:
            # Fixed in cockpit 255 (https://github.com/cockpit-project/cockpit/commit/6ec4881856e)
            - name: >-
                Allow certmonger to write into Cockpit's certificate directory
              file:
                path: /etc/cockpit/ws-certs.d/
                state: directory
                setype: cert_t
                mode: 0755

            # has to be done dynamically, as the first step checks it out
            - name: Generate certificate with certificate system role
              include_role:
                name: fedora.linux_system_roles.certificate
              vars:
                certificate_requests:
                  - name: /etc/cockpit/ws-certs.d/monger-cockpit
                    dns: ['localhost', 'www.example.com']
                    ca: self-sign
                    group: cockpit-ws

            #
            # Validate installation
            #

            - name: Test - cockpit works with TLS and expected certificate
              # noqa command-instead-of-module
              command:
                cmd: >
                  curl --cacert /etc/cockpit/ws-certs.d/monger-cockpit.crt
                  https://localhost:9090
                # ansible 2.11's uri module has ca_path,
                # but that's still too new for us
              changed_when: false

            - name: Test - get certmonger tracking status
              command: >
                getcert list  --tracking-only
                -f /etc/cockpit/ws-certs.d/monger-cockpit.crt
              register: result
              changed_when: false

            - name: Test - ensure certificate generation succeeded
              assert:
                that: "'status: MONITORING' in result.stdout"

            - name: Test - clean up tracked certificate
              command: >
                getcert stop-tracking
                -f /etc/cockpit/ws-certs.d/monger-cockpit.crt
              changed_when: false

      always:
        - name: Test - clean up generated certificate
          file:
            path: /etc/cockpit/ws-certs.d/monger-cockpit.crt
            state: absent

        - name: Test - clean up generated private key
          file:
            path: /etc/cockpit/ws-certs.d/monger-cockpit.key
            state: absent

        - name: Test - generic cleanup
          include_tasks: tasks/cleanup.yml
